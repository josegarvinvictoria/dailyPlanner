"use strict";var ApplicationConfiguration=function(){var applicationModuleName="dailyplanner",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core",["ui.calendar","ui.bootstrap","angularFileUpload"]),ApplicationConfiguration.registerModule("eventcalendaris"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("eventcalendaris").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Eventcalendaris","eventcalendaris","dropdown","/eventcalendaris(/create)?"),Menus.addSubMenuItem("topbar","eventcalendaris","List Eventcalendaris","eventcalendaris"),Menus.addSubMenuItem("topbar","eventcalendaris","New Eventcalendari","eventcalendaris/create")}]),angular.module("eventcalendaris").config(["$stateProvider",function($stateProvider){$stateProvider.state("listEventcalendaris",{url:"/eventcalendaris",templateUrl:"modules/eventcalendaris/views/list-eventcalendaris.client.view.html"}).state("createEventcalendari",{url:"/eventcalendaris/create",templateUrl:"modules/eventcalendaris/views/create-eventcalendari.client.view.html"}).state("viewEventcalendari",{url:"/eventcalendaris/:eventcalendariId",templateUrl:"modules/eventcalendaris/views/view-eventcalendari.client.view.html"}).state("editEventcalendari",{url:"/eventcalendaris/:eventcalendariId/edit",templateUrl:"modules/eventcalendaris/views/edit-eventcalendari.client.view.html"})}]),angular.module("eventcalendaris").controller("CalendarController",["$scope","$controller","$timeout","$stateParams","$location","Authentication","Eventcalendaris","CalendarSvc","$compile","uiCalendarConfig","$window",function($scope,$controller,$timeout,$stateParams,$location,Authentication,Eventcalendaris,CalendarSvc,$compile,uiCalendarConfig,$window){$scope.calendaris=[],$scope.eventSources=[],$scope.uiConfig={calendar:{height:580,width:450,editable:!0,lang:"es",header:{left:"today prev,next",center:"title",right:"month,basicWeek,basicDay"},eventClick:$scope.alertOnEventClick,eventDrop:$scope.alertOnDrop,eventResize:$scope.alertOnResize,eventRender:$scope.eventRender}},$scope.renderCalender=function(calendar){uiCalendarConfig.calendars[calendar]&&uiCalendarConfig.calendars[calendar].fullCalendar("render")};var date=new Date;date.getDate(),date.getMonth(),date.getFullYear();$scope.noEvents=!1,$scope.formatDate=function(date){return date.substring(0,10)},$scope.formatTime=function(date){return date.substring(0,10)},$scope.$on("event_eliminat",function(event,data){var indexCalEvent=-1;console.log("Rebut! Cal eliminar un event!"),console.log(data);for(var i=0;i<$scope.calendaris.length;i++)data.tipus==$scope.calendaris[i].nom&&(indexCalEvent=i);for(var i=0;i<$scope.calendaris[indexCalEvent].events.length;i++)$scope.calendaris[indexCalEvent].events[i]._id==data._id&&$scope.calendaris[indexCalEvent].events.splice(i,1);$scope.eEsborrat=!0}),$scope.eventsTotals=[],$scope.init=function(){if(0===$scope.eventsTotals.length)$scope.$on("eventsTotals",function(){$scope.eventsTotals=Eventcalendaris.getEventsTotals(),$scope.generateCalendars();for(var i=0;i<$scope.calendaris.length;i++){var a=$scope.eventToCalendarEvent($scope.calendaris[i]);$scope.eventSources.push(a)}0===$scope.calendaris.length&&($scope.noEvents=!0)});else{$scope.generateCalendars();for(var i=0;i<$scope.calendaris.length;i++){var a=$scope.eventToCalendarEvent($scope.calendaris[i]);$scope.eventSources.push(a)}}},$scope.eventRender=function(event,element,view){element.attr({tooltip:event.title,"tooltip-append-to-body":!0}),$compile(element)($scope)},$scope.eventToCalendarEvent=function(calendari){for(var events=calendari.events,calendarEvents=[],i=0;i<events.length;i++){var titleN=events[i].nom,everydayN=events[i].toteldia,startY=events[i].data_inici_event.substring(0,4),startM=events[i].data_inici_event.substring(5,7),startD=events[i].data_inici_event.substring(8,10);if(everydayN){var e={title:titleN,start:new Date(startY,startM-1,startD),allDay:!0};calendarEvents.push(e)}else{var endY=events[i].data_final_event.substring(0,4),endM=events[i].data_final_event.substring(5,7),endD=events[i].data_final_event.substring(8,10),e={title:titleN,start:new Date(startY,startM-1,startD),end:new Date(endY,endM-1,endD),allDay:!1};calendarEvents.push(e)}}return console.log("Events traduÃ¯ts"),calendarEvents},$scope.generateCalendars=function(){for(var i=0;i<$scope.eventsTotals.length;i++){var calendarName=$scope.eventsTotals[i].tipus;if(-1==$scope.getCalendarIndex(calendarName)){var nCal={nom:calendarName,events:[]};nCal.events.push($scope.eventsTotals[i]),$scope.calendaris.push(nCal)}else $scope.calendaris[$scope.getCalendarIndex(calendarName)].events.push($scope.eventsTotals[i])}},$scope.getCalendarIndex=function(calendarName){for(var i=0;i<$scope.calendaris.length;i++)if($scope.calendaris[i].nom==calendarName)return i;return-1},$scope.getEventsByType=function(type){for(var e=[],i=0;i<$scope.eventsTotals.length;i++)$scope.eventsTotals[i].tipus==type&&e.push($scope.eventsTotals[i]);return e},$scope.addRemoveEventSource=function(sources,source){var canAdd=0;angular.forEach(sources,function(value,key){sources[key]===source&&(sources.splice(key,1),canAdd=1)}),0===canAdd&&sources.push(source)}}]),angular.module("eventcalendaris").controller("EventcalendarisController",["$scope","$state","$stateParams","$location","Authentication","Eventcalendaris","CalendarSvc","Googlecalendar","$window","$controller",function($scope,$state,$stateParams,$location,Authentication,Eventcalendaris,CalendarSvc,Googlecalendar,$window,$controller){$scope.authentication=Authentication,$scope.create=function(){var eventcalendari=new Eventcalendaris.api({nom:this.nom,tipus:this.tipus,data_inici_event:this.data_inici_event,hora_inici_event:this.hora_inici_event,data_final_event:this.data_final_event,hora_final_event:this.hora_final_event,toteldia:this.toteldia,user:this.user});eventcalendari.$save(function(response){$location.path("eventcalendaris"),$window.location.reload(),$scope.nom="",$scope.tipus="",$scope.data_inici_event="",$scope.hora_inici_event="",$scope.data_final_event="",$scope.hora_final_event="",$scope.toteldia=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(eventcalendari){$scope.eventEsborrat=eventcalendari,swal({title:"Estas segur?",text:"Estas a punt d'esborrar un event!",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Si",cancelButtonText:"No",closeOnConfirm:!1,closeOnCancel:!1},function(isConfirm){if(isConfirm){if(eventcalendari){eventcalendari.$remove();for(var i in $scope.eventcalendaris)$scope.eventcalendaris[i]===eventcalendari&&$scope.eventcalendaris.splice(i,1)}else $scope.eventcalendari.$remove(function(){$location.path("eventcalendaris")});console.log("Avisant als altres controladors, event eliminat!"),$scope.$emit("event_eliminat",$scope.eventEsborrat),$window.location.reload()}else swal("Cancel.lat!","L'event no s'ha esborrat!","error")})},$scope.update=function(){var eventcalendari=$scope.eventcalendari;eventcalendari.$update(function(){$location.path("eventcalendaris"),$window.location.reload()},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){Eventcalendaris.query(function(cal){$scope.eventcalendaris=cal})},$scope.findOne=function(){$scope.eventcalendari=Eventcalendaris.api.get({eventcalendariId:$stateParams.eventcalendariId})}}]),angular.module("eventcalendaris").factory("CalendarSvc",["Eventcalendaris",function(Eventcalendaris){var eventsTotals=[],s={getEventsTotals:function(){return console.log("Es demanen els events totals al servei!!"),0===eventsTotals.length?(Eventcalendaris.query().$promise.then(function(eventsNous){return console.log("Events recuperats"),console.log(eventsNous),eventsNous}),Eventcalendaris.query()):eventsTotals},setEventsTotals:function(newEvents){eventsTotals=newEvents,console.log(eventsTotals)},comprovarSiExisteix:function(event){for(var cont,i=0;i<eventsTotals.length;i++)(eventsTotals[i].nom==event.nom||eventsTotals[i].tipus==event.tipus)&&cont++;return 0==cont?!1:!0},addGoogleEvents:function(googleEvents){var gEvents=googleEvents.items;console.log("Events de Google!"),console.log(gEvents);for(var i=0;i<gEvents.length;i++){var dataInicial,dataFinal;null==gEvents[i].end.dateTime?(dataInicial=gEvents[i].start.date,dataFinal=gEvents[i].end.date):(dataInicial=gEvents[i].start.dateTime,dataFinal=gEvents[i].end.dateTime);var eventcalendari=new Eventcalendaris.api({nom:gEvents[i].summary,tipus:googleEvents.summary,data_inici_event:dataInicial,hora_inici_event:"00:00",data_final_event:dataFinal,hora_final_event:"00:00",proveidor:"Google",toteldia:!0});this.comprovarSiExisteix(eventcalendari)?eventcalendari.$save(function(response){console.log("nou event desat!")},function(errorResponse){console.log("error")}):console.log("existeix")}},startAll:function(){Eventcalendaris.query().$promise.then(function(cal){eventsTotals=cal,s.getEventsTotals().$promise.then(function(eventsNous){$rootScope.$broadcast("eventsNous",eventsNous)})})}};return s}]),angular.module("eventcalendaris").factory("Eventcalendaris",["$resource","$rootScope",function($resource,$rootScope){function api(){return $resource("eventcalendaris/:eventcalendariId",{eventcalendariId:"@_id"},{update:{method:"PUT"}})}var eventsTotals=[],s={getEventsTotals:function(){return eventsTotals},setEventsTotals:function(e){eventsTotals=e,$rootScope.$broadcast("eventsTotals")},api:$resource("eventcalendaris/:eventcalendariId",{eventcalendariId:"@_id"},{update:{method:"PUT"}}),comprova:$resource("/eventcalendaris/:nom/:tipus",{},{update:{method:"PUT",isArray:!0},query:{method:"GET",isArray:!1}})};return api().query(function(events){s.setEventsTotals(events)}),s}]),angular.module("eventcalendaris").factory("Googlecalendar",["$resource","$http",function($resource,$http){return{checkAuth:function(){return $http({method:"GET",url:"/checkauth"})},getCalendars:function(){return $http({method:"GET",url:"/googlecalendars"})},getEventsByCalendarId:function(id){return $http({method:"GET",url:"/eventsbycalendarid/"+id})}}}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("googleoptions",{url:"/settings/googleoptions",templateUrl:"modules/users/views/settings/google-options.client.view.html"}).state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("GoogleoptionsController",["$scope","Googlecalendar","$window","GoogleOptionsService","CalendarSvc",function($scope,Googlecalendar,$window,GoogleOptionsService,CalendarSvc){$scope.autoritzat=!1,$scope.calendaris=null,$scope.calendarisRecuperats=!1,console.log("autoritzat----->"+$scope.autoritzat),$scope.init=function(){$scope.getCalendars()},$scope.checkAuth=function(){Googlecalendar.checkAuth().success(function(data,status,headers,config){230==status?swal({title:"Estas segur?",text:"Estas a punt de donar accÃ©s als teus calendaris de Google. Vols continuar?",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Si!",cancelButtonText:"No, no vull donar accÃ¨s!",closeOnConfirm:!1,closeOnCancel:!1},function(isConfirm){isConfirm?$window.location.href=data.url:swal("Cancel.lat!","No s'han donat permissos a Dailyplanner per veure el calendaris.","error")}):(swal("Ja has donat permis!"),console.warn("AutentificaciÃ³ Google Calendar OK!"),console.log(data),console.warn(status),console.warn(headers))}).error(function(data,status,headers,config){console.warn("Hi ha hagut un error al comprovar l'autentificaciÃ³"),console.warn(data),console.warn(status),console.warn(headers),console.warn(config)})},$scope.getCalendars=function(){Googlecalendar.getCalendars().success(function(data,status,headers,config){230==status&&(console.log("No es tÃ© permÃ­s...redireccionant.."),$window.location.href=data.url),console.info("Calendaris recuperats!"),$scope.calendaris=data.items,$scope.calendarisRecuperats=!0,console.log($scope.calendaris)}).error(function(data,status,headers,config){console.warn("Error al recuperar els calendaris...")})},$scope.importCalendar=function(calendar){var nevents;swal({title:"Estas segur?",text:'Segur que vols importar tots els events del calendari "'+calendar.summary+'"!',type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Si",cancelButtonText:"No",closeOnConfirm:!1,closeOnCancel:!1},function(isConfirm){isConfirm?Googlecalendar.getEventsByCalendarId(encodeURIComponent(calendar.id)).success(function(data,status,headers,config){console.info("Events recuperats AMB REPETITS"),console.info(data.items),nevents=data.items.length,CalendarSvc.addGoogleEvents(data),console.info("Event enviats al servei!"),swal("Events importats","S'han importat un total de "+nevents+" events!","success")}).error(function(data,status,headers,config){swal("Error","S'han trobat errors a l'hora d'importat els events...","error")}):swal("Error","No s'han importat events","error")})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication","FileUploader",function($scope,$http,$location,Users,Authentication,FileUploader){$scope.user=Authentication.user;$scope.uploader=new FileUploader({url:"/api/imatges",alias:"image",removeAfterUpload:!0});$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})},$scope.pujarImatge=function(){noty({text:"<span class='glyphicon glyphicon-ok' aria-hidden='true'></span>  Imagen cambiada correctamente! Recarga la pagina para ver los cambios.",type:"information",dismissQueue:!0,layout:"topLeft",closeWith:["click"],theme:"relax",maxVisible:10,animation:{open:"animated bounceInLeft",close:"animated bounceOutLeft",easing:"swing",speed:500}})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("GoogleOptionsService",[function(){var autoritzat=!1,svc={autoritzar:function(){console.log("Autoritzant"),autoritzat=!0},desAutoritzar:function(){console.log("DesAutoritzant"),autoritzat=!1},getAutoritzat:function(){return autoritzat}};return svc}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);